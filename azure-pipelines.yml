# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool: Default
#  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  imageName: 'k8s-poc'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: Docker@2
  inputs:
    repository: $(imageName)
    command: 'build'
    Dockerfile: '**/Dockerfile'

- task: ECRPushImage@1
  inputs:
    awsCredentials: 'AWS Account'
    regionName: 'us-east-1'
    imageSource: 'imagename'
    sourceImageName: 'k8s-poc'
    sourceImageTag: '$(Build.BuildId)'
    repositoryName: 'vms/k8s-poc'
    pushTag: '$(Build.BuildId)'
    outputVariable: '719353466243.dkr.ecr.us-east-1.amazonaws.com/vms/k8s-poc'

- task: CopyFiles@2
  inputs:
    Contents: 'k8s.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: CmdLine@2
  inputs:
    script: |
      echo Removing local docker images
      docker rmi 719353466243.dkr.ecr.us-east-1.amazonaws.com/vms/k8s-poc:$(Build.BuildId)
      docker rmi k8s-poc:$(Build.BuildId)

# - task: CmdLine@2
#   inputs:
#     script: 'echo $(Build.BuildId)> $(Pipeline.Workspace)/version.txt'

# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Pipeline.Workspace)'
#     artifact: 'version.txt'
#     publishLocation: 'pipeline'

# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       # Write your PowerShell commands here.
      
#       Write-Host "listing local bin----------------------------------"
#       ls 
     